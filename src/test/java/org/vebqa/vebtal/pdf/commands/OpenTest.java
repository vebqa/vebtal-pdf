package org.vebqa.vebtal.pdf.commands;

import static org.hamcrest.beans.SamePropertyValuesAs.samePropertyValuesAs;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThat;

import org.hamcrest.CoreMatchers;
import org.junit.Test;
import org.vebqa.vebtal.model.Response;
import org.vebqa.vebtal.pdf.PDFDriver;

public class OpenTest {

	@Test
	public void openProperPdfFile() {
		// create command to test
		Open cmd = new Open("open", "./src/test/java/resource/LoremIpsum_3Pages.pdf", "");
		Response result = cmd.executeImpl(new PDFDriver());

		// create a green result object
		Response resultCheck = new Response();
		resultCheck.setCode(Response.PASSED);
		resultCheck.setMessage("SUT file successfully read.");

		// check
		assertThat(resultCheck, samePropertyValuesAs(result));
	}

	@Test
	public void openEmptyPdfFile() {
		// create command to test
		Open cmd = new Open("open", "./src/test/java/resource/EmptyFile.pdf", "");
		Response result = cmd.executeImpl(new PDFDriver());

		// create a green result object
		Response resultCheck = new Response();
		resultCheck.setCode(Response.PASSED);
		resultCheck.setMessage("SUT file successfully read.");

		// check
		assertThat(resultCheck, samePropertyValuesAs(result));
	}

	@Test
	public void openNonExistingFile() {
		// create command to test
		Open cmd = new Open("open", "./src/test/java/resource/NonExistingFile.pdf", "");
		Response result = cmd.executeImpl(new PDFDriver());

		// check
		assertEquals(result.getCode(), Response.FAILED);
		assertThat(result.getMessage(), CoreMatchers.containsString("File not found:"));
	}

	@Test
	public void openInvalidPdfFile() {
		// create command to test
		Open cmd = new Open("open", "./src/test/java/resource/InvalidFile.pdf", "");
		Response result = cmd.executeImpl(new PDFDriver());

		// check
		assertEquals(result.getCode(), Response.FAILED);
		assertThat(result.getMessage(), CoreMatchers.containsString("Cannot load PDF!"));
	}
	
	@Test
	public void openPasswordProtectedPdfFile() {
		// create command to test
		Open cmd = new Open("open", "./src/test/java/resource/ProtectedWithPassword.pdf", "");
		Response result = cmd.executeImpl(new PDFDriver());

		// check
		assertEquals(result.getCode(), Response.FAILED);
		assertThat(result.getMessage(), CoreMatchers.containsString("Cannot load PDF!"));
	}

}